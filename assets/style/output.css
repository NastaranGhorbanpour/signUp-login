/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --radius-sm: 0.25rem;
    --radius-lg: 0.5rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\/3 {
    top: calc(1/3 * 100%);
  }
  .top-\[20px\] {
    top: 20px;
  }
  .right-\[25px\] {
    right: 25px;
  }
  .right-\[40\%\] {
    right: 40%;
  }
  .-bottom-2 {
    bottom: calc(var(--spacing) * -2);
  }
  .-bottom-7 {
    bottom: calc(var(--spacing) * -7);
  }
  .-bottom-\[25px\] {
    bottom: calc(25px * -1);
  }
  .bottom-\[20px\] {
    bottom: 20px;
  }
  .bottom-\[40px\] {
    bottom: 40px;
  }
  .bottom-\[70px\] {
    bottom: 70px;
  }
  .bottom-\[120px\] {
    bottom: 120px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1 {
    left: calc(var(--spacing) * 1);
  }
  .left-1\/4 {
    left: calc(1/4 * 100%);
  }
  .left-\[25px\] {
    left: 25px;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-50 {
    z-index: 50;
  }
  .m-30 {
    margin: calc(var(--spacing) * 30);
  }
  .m-280 {
    margin: calc(var(--spacing) * 280);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-\[15px\] {
    height: 15px;
  }
  .h-\[150px\] {
    height: 150px;
  }
  .h-full {
    height: 100%;
  }
  .min-h-\[100vh\] {
    min-height: 100vh;
  }
  .min-h-\[470px\] {
    min-height: 470px;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-8\/10 {
    width: calc(8/10 * 100%);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-9\/10 {
    width: calc(9/10 * 100%);
  }
  .w-\[15px\] {
    width: 15px;
  }
  .w-\[150px\] {
    width: 150px;
  }
  .w-full {
    width: 100%;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[\#7b7979\] {
    border-color: #7b7979;
  }
  .border-\[btn\] {
    border-color: btn;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-\[\#3B3B3B\] {
    background-color: #3B3B3B;
  }
  .bg-\[\#CCCCCC\] {
    background-color: #CCCCCC;
  }
  .bg-\[\#E7716D\] {
    background-color: #E7716D;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-15 {
    padding-block: calc(var(--spacing) * 15);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .font-\[caveat\] {
    font-family: caveat;
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[18px\] {
    font-size: 18px;
  }
  .text-\[20px\] {
    font-size: 20px;
  }
  .text-\[\#E7716D\] {
    color: #E7716D;
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-0 {
    text-decoration-thickness: 0px;
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-black {
    --tw-shadow-color: #000;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-black) var(--tw-shadow-alpha), transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .\*\:rounded-sm {
    :is(& > *) {
      border-radius: var(--radius-sm);
    }
  }
  .\*\:px-10 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .\*\:text-xl {
    :is(& > *) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .\*\:text-\[\#E7716D\] {
    :is(& > *) {
      color: #E7716D;
    }
  }
  .group-hover\:-right-\[20\%\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        right: calc(20% * -1);
      }
    }
  }
  .group-hover\:z-50 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        z-index: 50;
      }
    }
  }
  .hover\:bg-\[\#CCCCCC\] {
    &:hover {
      @media (hover: hover) {
        background-color: #CCCCCC;
      }
    }
  }
  .hover\:bg-\[\#ae4c4c\] {
    &:hover {
      @media (hover: hover) {
        background-color: #ae4c4c;
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-\[\#3B3B3B\] {
    &:hover {
      @media (hover: hover) {
        color: #3B3B3B;
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .md\:-top-\[60px\] {
    @media (width >= 48rem) {
      top: calc(60px * -1);
    }
  }
  .md\:-bottom-3 {
    @media (width >= 48rem) {
      bottom: calc(var(--spacing) * -3);
    }
  }
}
@layer base {
  h1,h2 {
    font-family: mon-light;
    font-size: 26px;
  }
  p {
    font-family: mon-light;
    font-size: 15px;
  }
  button {
    font-family: mon-regular;
    font-size: 15px;
  }
  span ,a {
    font-family: mon-medium;
  }
}
@layer components {
  .inp {
    width: 100%;
    border-bottom: 1px solid #7b7979;
    color: btn;
    margin-block: 25px;
    padding: 5px;
    outline: none;
  }
  .alert {
    color: red;
    width: 100%;
    text-align: left;
    margin-inline: 10px;
    font-size: 12px;
  }
  .btn {
    padding-block: 8px;
    padding-inline: 30px;
    border-radius: 5px;
    transition: 0.4s;
    color: white;
  }
  .formInfo {
    width: 90%;
    height: 80px;
    border: 1px solid #7b7979;
    display: flex;
    border-radius: 4px;
    >span {
      width: 20%;
      padding: 20px;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 15px;
    }
  }
  .editInp {
    height: 40px;
    width: 80%;
    background-color: white;
    color: #3B3B3B;
    padding: 12px;
    margin-block: 12px;
    outline: none;
  }
  .icons {
    width: 30%;
    height: 40px;
    color: #3B3B3B;
    border: 1px solid gray;
    font-size: 22px;
    margin-inline: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }
}
@layer utilities {
  .turn {
    display: flex;
    flex-wrap: wrap;
    justify-content: end;
  }
}
@layer theme {
  .firstAnime {
    animation: bdr1 3s ease-out infinite alternate;
  }
  .secondAnime {
    animation: bdr2 3s ease-out alternate infinite;
  }
}
@keyframes bdr1 {
  0% {
    border-radius: 58% 34% 42% 37% / 52% 30% 68% 44%;
  }
  50% {
    border-radius: 34% 54% 30% 59% / 75% 59% 36% 33%;
  }
  100% {
    border-radius: 61% 43% 75% 27% / 87% 33% 46% 20%;
  }
}
@keyframes bdr2 {
  0% {
    border-radius: 61% 43% 75% 27% / 87% 33% 46% 20%;
  }
  50% {
    border-radius: 58% 34% 42% 37% / 52% 30% 68% 44%;
  }
  100% {
    border-radius: 34% 54% 30% 59% / 75% 59% 36% 33%;
  }
}
@font-face {
  font-family: caveat;
  src: url(../font/Caveat-Bold.ttf);
}
@font-face {
  font-family: mon-light;
  src: url(../font/Montserrat-Light.ttf);
}
@font-face {
  font-family: mon-medium;
  src: url(../font/Montserrat-Medium.ttf);
}
@font-face {
  font-family: mon-regular;
  src: url(../font/Montserrat-Regular.ttf);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
